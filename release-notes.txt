
Release notes:
0.4.x (unreleased)
    - adds TaskSeq.takeWhile, takeWhileAsync, takeWhileInclusive, takeWhileInclusiveAsync, #126 (by @bartelink)

0.3.0
    - internal renames, improved doc comments, signature files for complex types, hide internal-only types, fixes #112.
    - adds support for static TaskLike, allowing the same let! and do! overloads that F# task supports, fixes #110.
    - implements 'do!' for non-generic Task like with Task.Delay, fixes #43.
    - adds support for 'for .. in ..' with task sequences in F# tasks and async, #75, #93 and #99 (with help from @theangrybyrd).
    - adds TaskSeq.singleton, #90 (by @gusty).
    - fixes overload resolution bug with 'use' and 'use!', #97 (thanks @peterfaria).
    - improves TaskSeq.empty by not relying on resumable state, #89 (by @gusty).
    - does not throw exceptions anymore for unequal lengths in TaskSeq.zip, fixes #32.

0.2.2
    - removes TaskSeq.toSeqCachedAsync, which was incorrectly named. Use toSeq or toListAsync instead.
    - renames TaskSeq.toSeqCached to TaskSeq.toSeq, which was its actual operational behavior.

0.2.1
    - fixes an issue with ValueTask on completed iterations.
    - adds `TaskSeq.except` and `TaskSeq.exceptOfSeq` async set operations.

0.2
    - moved from NET 6.0, to NetStandard 2.1 for greater compatibility, no functional changes.
    - move to minimally necessary FSharp.Core version: 6.0.2.
    - updated readme with progress overview, corrected meta info, added release notes.

0.1.1
    - updated meta info in nuget package and added readme.

0.1
    - initial release
    - implements taskSeq CE using resumable state machines
        - with support for: yield, yield!, let, let!, while, for, try-with, try-finally, use, use!
        - and: tasks and valuetasks
    - adds toXXX / ofXXX functions
    - adds map/mapi/fold/iter/iteri/collect etc with async variants
    - adds find/pick/choose/filter etc with async variants and 'try' variants
    - adds cast/concat/append/prepend/delay/exactlyOne
    - adds empty/isEmpty
    - adds findIndex/indexed/init/initInfinite
    - adds head/last/tryHead/tryLast/tail/tryTail
    - adds zip/length